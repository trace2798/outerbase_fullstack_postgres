var wordsToCheck = ["bad", "yak", "shoot", "commands"];

var privileges = ["cellValue", "configuration"];

var templateCell_$PLUGIN_ID = document.createElement("template");
templateCell_$PLUGIN_ID.innerHTML = `<style>#container{display:flex;align-items:center;gap:8px;justify-content:space-between;height:100%;width:calc(100% - 16px);padding:0 8px;}input{height:100%;flex:1;background-color:transparent;border:0;min-width:0;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;}input:focus{outline:none;}</style><div id="container"><input type="text" id="image-value" placeholder="Enter URL..."><button id="view-image">View</button></div>`;

var templateEditor_$PLUGIN_ID = document.createElement("template");
templateEditor_$PLUGIN_ID.innerHTML = `<style>#container{max-width:400px;}#image-old{width:100%;height:100%;}#image{background-size:contain;background-repeat:no-repeat;max-width:400px;}#background-image{background-repeat:no-repeat;background-size:contain;}</style><div id="container"><div id="background-image"></div></div>`;

class OuterbasePluginConfig_$PLUGIN_ID {
  constructor(object) {}
}

class OuterbasePluginCell_$PLUGIN_ID extends HTMLElement {
  static get observedAttributes() {
    return privileges;
  }

  config = new OuterbasePluginConfig_$PLUGIN_ID({});

  constructor() {
    super();
    this.shadow = this.attachShadow({ mode: "open" });
    this.shadow.appendChild(templateCell_$PLUGIN_ID.content.cloneNode(true));
  }

  connectedCallback() {
    this.config = new OuterbasePluginConfig_$PLUGIN_ID(
      JSON.parse(this.getAttribute("configuration"))
    );
    var cellValue = this.getAttribute("cellvalue");
    this.shadow.querySelector("#image-value").value = cellValue;
    var imageInput = this.shadow.getElementById("image-value");
    var viewImageButton = this.shadow.getElementById("view-image");

    if (imageInput && viewImageButton) {
      imageInput.addEventListener("focus", () => {
        console.log("onstopedit 1");
        this.callCustomEvent({
          action: "onstopedit",
          value: true,
        });
      });

      imageInput.addEventListener("blur", () => {
        this.callCustomEvent({
          action: "cellvalue",
          value: imageInput.value,
        });
        this.callCustomEvent({
          action: "onstopedit",
          value: true,
        });
      });

      viewImageButton.addEventListener("click", () => {
        var containsWords = wordsToCheck.some((word) =>
          cellValue.includes(word)
        );
        var message = containsWords ? "contains words" : "no";
        imageInput.value = message;
        this.callCustomEvent({
          action: "onedit",
          value: true,
        });
      });
    }
  }

  callCustomEvent(data) {
    const event = new CustomEvent("custom-change", {
      detail: data,
      bubbles: true,
      composed: true,
    });

    this.dispatchEvent(event);
  }
}

class OuterbasePluginEditor_$PLUGIN_ID extends HTMLElement {
  static get observedAttributes() {
    return privileges;
  }

  constructor() {
    super();
    this.shadow = this.attachShadow({ mode: "open" });
    this.shadow.appendChild(templateEditor_$PLUGIN_ID.content.cloneNode(true));
    this.config = new OuterbasePluginConfig_$PLUGIN_ID(
      JSON.parse(this.getAttribute("configuration"))
    );
  }

  connectedCallback() {
    var cellValue = this.getAttribute("cellvalue");
    var containsWords = wordsToCheck.some((word) => cellValue.includes(word));
    var message = containsWords ? "contains words" : "no";
    var backgroundImageView = this.shadow.getElementById("background-image");
    if (backgroundImageView) {
      backgroundImageView.innerHTML = message;
    }
    backgroundImageView.style.backgroundColor = 'blue';
            backgroundImageView.style.color = 'white';
  }
}

window.customElements.define(
  "outerbase-plugin-cell-$PLUGIN_ID",
  OuterbasePluginCell_$PLUGIN_ID
);
window.customElements.define(
  "outerbase-plugin-editor-$PLUGIN_ID",
  OuterbasePluginEditor_$PLUGIN_ID
);

//working plugin to check specific words
